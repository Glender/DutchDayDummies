// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// gauss_easter_algorithm_Cpp
std::string gauss_easter_algorithm_Cpp(int year);
RcppExport SEXP _DutchDayDummies_gauss_easter_algorithm_Cpp(SEXP yearSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type year(yearSEXP);
    rcpp_result_gen = Rcpp::wrap(gauss_easter_algorithm_Cpp(year));
    return rcpp_result_gen;
END_RCPP
}
// ummalqura_algorithm_Cpp
std::string ummalqura_algorithm_Cpp(int day, int month, int year);
RcppExport SEXP _DutchDayDummies_ummalqura_algorithm_Cpp(SEXP daySEXP, SEXP monthSEXP, SEXP yearSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type day(daySEXP);
    Rcpp::traits::input_parameter< int >::type month(monthSEXP);
    Rcpp::traits::input_parameter< int >::type year(yearSEXP);
    rcpp_result_gen = Rcpp::wrap(ummalqura_algorithm_Cpp(day, month, year));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DutchDayDummies_gauss_easter_algorithm_Cpp", (DL_FUNC) &_DutchDayDummies_gauss_easter_algorithm_Cpp, 1},
    {"_DutchDayDummies_ummalqura_algorithm_Cpp", (DL_FUNC) &_DutchDayDummies_ummalqura_algorithm_Cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_DutchDayDummies(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
